// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AreasColumns holds the columns for the "areas" table.
	AreasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "area_name", Type: field.TypeString},
		{Name: "area_district", Type: field.TypeString},
		{Name: "area_sub_district", Type: field.TypeString},
		{Name: "disease_area", Type: field.TypeInt, Nullable: true},
		{Name: "employee_area", Type: field.TypeInt, Nullable: true},
		{Name: "level_area", Type: field.TypeInt, Nullable: true},
		{Name: "statistic_area", Type: field.TypeInt, Nullable: true},
	}
	// AreasTable holds the schema information for the "areas" table.
	AreasTable = &schema.Table{
		Name:       "areas",
		Columns:    AreasColumns,
		PrimaryKey: []*schema.Column{AreasColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "areas_diseases_area",
				Columns: []*schema.Column{AreasColumns[4]},

				RefColumns: []*schema.Column{DiseasesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "areas_employees_area",
				Columns: []*schema.Column{AreasColumns[5]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "areas_levels_area",
				Columns: []*schema.Column{AreasColumns[6]},

				RefColumns: []*schema.Column{LevelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "areas_statistics_area",
				Columns: []*schema.Column{AreasColumns[7]},

				RefColumns: []*schema.Column{StatisticsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BloodtypesColumns holds the columns for the "bloodtypes" table.
	BloodtypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bloodtype_name", Type: field.TypeString, Unique: true},
	}
	// BloodtypesTable holds the schema information for the "bloodtypes" table.
	BloodtypesTable = &schema.Table{
		Name:        "bloodtypes",
		Columns:     BloodtypesColumns,
		PrimaryKey:  []*schema.Column{BloodtypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "category_name", Type: field.TypeString, Unique: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:        "categories",
		Columns:     CategoriesColumns,
		PrimaryKey:  []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "department_name", Type: field.TypeString, Unique: true},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:        "departments",
		Columns:     DepartmentsColumns,
		PrimaryKey:  []*schema.Column{DepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DiagnosesColumns holds the columns for the "diagnoses" table.
	DiagnosesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "diagnostic_messages", Type: field.TypeString},
		{Name: "surveillance_period", Type: field.TypeString},
		{Name: "treatment", Type: field.TypeString},
		{Name: "diagnosis_date", Type: field.TypeTime},
		{Name: "disease_diagnosis", Type: field.TypeInt, Nullable: true},
		{Name: "employee_diagnosis", Type: field.TypeInt, Nullable: true},
		{Name: "patient_diagnosis", Type: field.TypeInt, Nullable: true},
	}
	// DiagnosesTable holds the schema information for the "diagnoses" table.
	DiagnosesTable = &schema.Table{
		Name:       "diagnoses",
		Columns:    DiagnosesColumns,
		PrimaryKey: []*schema.Column{DiagnosesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "diagnoses_diseases_diagnosis",
				Columns: []*schema.Column{DiagnosesColumns[5]},

				RefColumns: []*schema.Column{DiseasesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "diagnoses_employees_diagnosis",
				Columns: []*schema.Column{DiagnosesColumns[6]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "diagnoses_patients_diagnosis",
				Columns: []*schema.Column{DiagnosesColumns[7]},

				RefColumns: []*schema.Column{PatientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DiseasesColumns holds the columns for the "diseases" table.
	DiseasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "disease_name", Type: field.TypeString},
		{Name: "symptom", Type: field.TypeString},
		{Name: "contagion", Type: field.TypeString},
		{Name: "diseasetype_disease", Type: field.TypeInt, Nullable: true},
		{Name: "employee_disease", Type: field.TypeInt, Nullable: true},
		{Name: "severity_disease", Type: field.TypeInt, Nullable: true},
	}
	// DiseasesTable holds the schema information for the "diseases" table.
	DiseasesTable = &schema.Table{
		Name:       "diseases",
		Columns:    DiseasesColumns,
		PrimaryKey: []*schema.Column{DiseasesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "diseases_diseasetypes_disease",
				Columns: []*schema.Column{DiseasesColumns[4]},

				RefColumns: []*schema.Column{DiseasetypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "diseases_employees_disease",
				Columns: []*schema.Column{DiseasesColumns[5]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "diseases_severities_disease",
				Columns: []*schema.Column{DiseasesColumns[6]},

				RefColumns: []*schema.Column{SeveritiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DiseasetypesColumns holds the columns for the "diseasetypes" table.
	DiseasetypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "disease_type_name", Type: field.TypeString, Unique: true},
	}
	// DiseasetypesTable holds the schema information for the "diseasetypes" table.
	DiseasetypesTable = &schema.Table{
		Name:        "diseasetypes",
		Columns:     DiseasetypesColumns,
		PrimaryKey:  []*schema.Column{DiseasetypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DrugsColumns holds the columns for the "drugs" table.
	DrugsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "drug_name", Type: field.TypeString},
		{Name: "howto", Type: field.TypeString},
		{Name: "property", Type: field.TypeString},
		{Name: "disease_drug", Type: field.TypeInt, Nullable: true},
		{Name: "drug_type_drug", Type: field.TypeInt, Nullable: true},
		{Name: "employee_drug", Type: field.TypeInt, Nullable: true},
	}
	// DrugsTable holds the schema information for the "drugs" table.
	DrugsTable = &schema.Table{
		Name:       "drugs",
		Columns:    DrugsColumns,
		PrimaryKey: []*schema.Column{DrugsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "drugs_diseases_drug",
				Columns: []*schema.Column{DrugsColumns[4]},

				RefColumns: []*schema.Column{DiseasesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "drugs_drug_types_drug",
				Columns: []*schema.Column{DrugsColumns[5]},

				RefColumns: []*schema.Column{DrugTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "drugs_employees_drug",
				Columns: []*schema.Column{DrugsColumns[6]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DrugTypesColumns holds the columns for the "drug_types" table.
	DrugTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "drug_type_name", Type: field.TypeString, Unique: true},
	}
	// DrugTypesTable holds the schema information for the "drug_types" table.
	DrugTypesTable = &schema.Table{
		Name:        "drug_types",
		Columns:     DrugTypesColumns,
		PrimaryKey:  []*schema.Column{DrugTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EmployeesColumns holds the columns for the "employees" table.
	EmployeesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "employee_name", Type: field.TypeString},
		{Name: "tel", Type: field.TypeString, Size: 10},
		{Name: "birthday_date", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "department_employee", Type: field.TypeInt, Nullable: true},
		{Name: "nametitle_employee", Type: field.TypeInt, Nullable: true},
		{Name: "place_employee", Type: field.TypeInt, Nullable: true},
	}
	// EmployeesTable holds the schema information for the "employees" table.
	EmployeesTable = &schema.Table{
		Name:       "employees",
		Columns:    EmployeesColumns,
		PrimaryKey: []*schema.Column{EmployeesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "employees_departments_employee",
				Columns: []*schema.Column{EmployeesColumns[7]},

				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "employees_nametitles_employee",
				Columns: []*schema.Column{EmployeesColumns[8]},

				RefColumns: []*schema.Column{NametitlesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "employees_places_employee",
				Columns: []*schema.Column{EmployeesColumns[9]},

				RefColumns: []*schema.Column{PlacesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GendersColumns holds the columns for the "genders" table.
	GendersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "gender_name", Type: field.TypeString, Unique: true},
	}
	// GendersTable holds the schema information for the "genders" table.
	GendersTable = &schema.Table{
		Name:        "genders",
		Columns:     GendersColumns,
		PrimaryKey:  []*schema.Column{GendersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// LevelsColumns holds the columns for the "levels" table.
	LevelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "level_name", Type: field.TypeString, Unique: true},
	}
	// LevelsTable holds the schema information for the "levels" table.
	LevelsTable = &schema.Table{
		Name:        "levels",
		Columns:     LevelsColumns,
		PrimaryKey:  []*schema.Column{LevelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// NametitlesColumns holds the columns for the "nametitles" table.
	NametitlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Unique: true},
	}
	// NametitlesTable holds the schema information for the "nametitles" table.
	NametitlesTable = &schema.Table{
		Name:        "nametitles",
		Columns:     NametitlesColumns,
		PrimaryKey:  []*schema.Column{NametitlesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PatientsColumns holds the columns for the "patients" table.
	PatientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "idcard", Type: field.TypeString, Size: 13},
		{Name: "patient_name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "congenital", Type: field.TypeString},
		{Name: "allergic", Type: field.TypeString},
		{Name: "bloodtype_patient", Type: field.TypeInt, Nullable: true},
		{Name: "category_patient", Type: field.TypeInt, Nullable: true},
		{Name: "employee_patient", Type: field.TypeInt, Nullable: true},
		{Name: "gender_patient", Type: field.TypeInt, Nullable: true},
		{Name: "nametitle_patient", Type: field.TypeInt, Nullable: true},
	}
	// PatientsTable holds the schema information for the "patients" table.
	PatientsTable = &schema.Table{
		Name:       "patients",
		Columns:    PatientsColumns,
		PrimaryKey: []*schema.Column{PatientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "patients_bloodtypes_patient",
				Columns: []*schema.Column{PatientsColumns[6]},

				RefColumns: []*schema.Column{BloodtypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "patients_categories_patient",
				Columns: []*schema.Column{PatientsColumns[7]},

				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "patients_employees_patient",
				Columns: []*schema.Column{PatientsColumns[8]},

				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "patients_genders_patient",
				Columns: []*schema.Column{PatientsColumns[9]},

				RefColumns: []*schema.Column{GendersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "patients_nametitles_patient",
				Columns: []*schema.Column{PatientsColumns[10]},

				RefColumns: []*schema.Column{NametitlesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlacesColumns holds the columns for the "places" table.
	PlacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "place_name", Type: field.TypeString, Unique: true},
	}
	// PlacesTable holds the schema information for the "places" table.
	PlacesTable = &schema.Table{
		Name:        "places",
		Columns:     PlacesColumns,
		PrimaryKey:  []*schema.Column{PlacesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SeveritiesColumns holds the columns for the "severities" table.
	SeveritiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "severity_name", Type: field.TypeString, Unique: true},
	}
	// SeveritiesTable holds the schema information for the "severities" table.
	SeveritiesTable = &schema.Table{
		Name:        "severities",
		Columns:     SeveritiesColumns,
		PrimaryKey:  []*schema.Column{SeveritiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// StatisticsColumns holds the columns for the "statistics" table.
	StatisticsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "statistic_name", Type: field.TypeString, Unique: true},
	}
	// StatisticsTable holds the schema information for the "statistics" table.
	StatisticsTable = &schema.Table{
		Name:        "statistics",
		Columns:     StatisticsColumns,
		PrimaryKey:  []*schema.Column{StatisticsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AreasTable,
		BloodtypesTable,
		CategoriesTable,
		DepartmentsTable,
		DiagnosesTable,
		DiseasesTable,
		DiseasetypesTable,
		DrugsTable,
		DrugTypesTable,
		EmployeesTable,
		GendersTable,
		LevelsTable,
		NametitlesTable,
		PatientsTable,
		PlacesTable,
		SeveritiesTable,
		StatisticsTable,
	}
)

func init() {
	AreasTable.ForeignKeys[0].RefTable = DiseasesTable
	AreasTable.ForeignKeys[1].RefTable = EmployeesTable
	AreasTable.ForeignKeys[2].RefTable = LevelsTable
	AreasTable.ForeignKeys[3].RefTable = StatisticsTable
	DiagnosesTable.ForeignKeys[0].RefTable = DiseasesTable
	DiagnosesTable.ForeignKeys[1].RefTable = EmployeesTable
	DiagnosesTable.ForeignKeys[2].RefTable = PatientsTable
	DiseasesTable.ForeignKeys[0].RefTable = DiseasetypesTable
	DiseasesTable.ForeignKeys[1].RefTable = EmployeesTable
	DiseasesTable.ForeignKeys[2].RefTable = SeveritiesTable
	DrugsTable.ForeignKeys[0].RefTable = DiseasesTable
	DrugsTable.ForeignKeys[1].RefTable = DrugTypesTable
	DrugsTable.ForeignKeys[2].RefTable = EmployeesTable
	EmployeesTable.ForeignKeys[0].RefTable = DepartmentsTable
	EmployeesTable.ForeignKeys[1].RefTable = NametitlesTable
	EmployeesTable.ForeignKeys[2].RefTable = PlacesTable
	PatientsTable.ForeignKeys[0].RefTable = BloodtypesTable
	PatientsTable.ForeignKeys[1].RefTable = CategoriesTable
	PatientsTable.ForeignKeys[2].RefTable = EmployeesTable
	PatientsTable.ForeignKeys[3].RefTable = GendersTable
	PatientsTable.ForeignKeys[4].RefTable = NametitlesTable
}
